ros2 launch turtlebot3_gazebo turtlebot3_world.launch.py
ros2 launch turtlebot3_navigation2 navigation2.launch.py use_sim_time:=True

colcon build --cmake-args -DCMAKE_CXX_FLAGS="-w"

ros2 launch igo_gazebo_sim sim_igo_real_warehouse.launch.py
ros2 launch igo_nav2_sim igo_navigation2.launch.py use_sim_time:=True localization_method:='0_map_frame'

https://github.com/gkouros/path-smoothing-ros/tree/master
https://sci-hub.hkvisa.net/10.1109/aim.2003.1225546

https://answers.ros.org/question/364561/tfcreatequaternionfromyaw-equivalent-in-ros2/

-x', '22.0', '-y', '7.0', '-Y', '0.0

        /*double currentTarget_x = xs.front();
        double currentTarget_y = ys.front();
        if((start.pose.position.x <= currentTarget_x && start.pose.position.y <= currentTarget_y) && (xs.size() > 1 && ys.size() > 1)){
            xs.erase(xs.begin());
            ys.erase(ys.begin());
        }*/



      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 0.5
      lookahead_dist: 0.6
      min_lookahead_dist: 0.3
      max_lookahead_dist: 0.9
      lookahead_time: 1.5
      rotate_to_heading_angular_vel: 1.8
      transform_tolerance: 0.1
      use_velocity_scaled_lookahead_dist: false
      min_approach_linear_velocity: 0.05
      approach_velocity_scaling_dist: 0.6
      use_collision_detection: true
      max_allowed_time_to_collision_up_to_carrot: 1.0
      use_regulated_linear_velocity_scaling: true
      use_fixed_curvature_lookahead: false
      curvature_lookahead_dist: 0.25
      use_cost_regulated_linear_velocity_scaling: false
      regulated_linear_scaling_min_radius: 0.9
      regulated_linear_scaling_min_speed: 0.25
      use_rotate_to_heading: true
      allow_reversing: false
      rotate_to_heading_min_angle: 0.785
      max_angular_accel: 3.2
      max_robot_pose_search_dist: 10.0
      use_interpolation: false




                      /*RCLCPP_INFO(node_->get_logger(), "User-Log: %s", "####################S###################");
                RCLCPP_INFO(node_->get_logger(), "User-Log: %s", rows[i][j].c_str());
                RCLCPP_INFO(node_->get_logger(), "User-Log: %d", lookf.length());
                RCLCPP_INFO(node_->get_logger(), "User-Log: %d", rows[i][j].length());
                RCLCPP_INFO(node_->get_logger(), "User-Log: %d", lookf.compare(rows[i][j]));
                RCLCPP_INFO(node_->get_logger(), "User-Log: %d", std::strcmp(rows[i][j].c_str(), lookf.c_str()));
                RCLCPP_INFO(node_->get_logger(), "User-Log: %s", "####################E###################");*/


                alias killgazebo="killall -9 gazebo & killall -9 gzserver  & killall -9 gzclient"


                22.005094, 6.995558